<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 开启注解-->
    <context:annotation-config/>
    <!--<import resource="memcache-config.xml"/>-->

    <!--配置数据库相关参数的属性-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>



    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"><!--配置SqlSessionFactory对象-->

        <property name="dataSource" ref="dataSource"/><!--注入数据库连接池-->

        <property name="typeAliasesPackage" value="com.lyh.entity"/><!--扫描model包 使用别名-->

        <!--&lt;!&ndash;指定MyBatis配置文件&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--指定mapper映射文件的位置-->
        <property value="classpath*:mapper/*.xml" name="mapperLocations"/>

    </bean>
    <!--扫描接口文件-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lyh.dao "/>
    </bean>

    <!--扫描service包下所有使用注解的类型-->
    <context:component-scan base-package="com.lyh.service"/>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"><!--配置事务管理-->

        <property name="dataSource" ref="dataSource"/><!--注入数据库连接池-->
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- aop 作用于controller-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--启动扫描机制，扫描对应包-->
    <context:annotation-config/>
    <!--<context:component-scan base-package="com.lyh.service" />-->
    <!--基于注解实现aop-->
    <context:component-scan base-package="com.lyh.utils"/>

    <!--&lt;!&ndash;开启aop&ndash;&gt;-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!-- 客户端：java_memcached-release_2.6.3 -->
    <bean id="memcachedPool" class="com.whalin.MemCached.SockIOPool" factory-method="getInstance" init-method="initialize" lazy-init="false" destroy-method="shutDown">
        <constructor-arg>
            <value>memcachedPool</value>
        </constructor-arg>
        <!-- 可以设置多个memcached服务器 -->
        <property name="servers">
            <list>
                <value>127.0.0.1:11211</value>
            </list>
        </property>
        <!-- 每个服务器初始连接数 -->
        <property name="initConn">
            <value>10</value>
        </property>
        <!-- 每个服务器最小连接数 -->
        <property name="minConn">
            <value>20</value>
        </property>
        <!-- 每个服务器最大连接数 -->
        <property name="maxConn">
            <value>1000</value>
        </property>
        <!-- 主线程睡眠时间 -->
        <property name="maintSleep">
            <value>30000</value>
        </property>
        <!-- TCP/Socket的参数，如果是true在写数据时不缓冲，立即发送出去参数 -->
        <property name="nagle">
            <value>false</value>
        </property>
        <!-- 连接超时/阻塞读取数据的超时间是 -->
        <property name="socketTO">
            <value>3000</value>
        </property>
    </bean>

    <bean id="memcachedClient" class="com.whalin.MemCached.MemCachedClient" >
        <constructor-arg>
            <value>memcachedPool</value>
        </constructor-arg>
    </bean>

</beans>
